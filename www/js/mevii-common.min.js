function AllowScroll(){
	$('body, html').css('overflow', '');
	$('body, html').css('position', '');
}

function CloseVideo(){
	AllowScroll();
	var bodyTop = $('body').scrollTop();
	$('body').scrollTop(bodyTop);

	$('#videoPlayer').fadeOut('fast', function(){
		$('#videoPlayer iframe').attr('src','');
		// $('#videoPlayer').css('top', '');
	});
}

function CreateGuid() {
	function _p8(s) {
		var p = (Math.random().toString(16) + "000000000").substr(2, 8);
		return s ? "-" + p.substr(0, 4) + "-" + p.substr(4, 4) : p;
	}
	return _p8() + _p8(true) + _p8(true) + _p8();
}

function HandleError(message){
	console.log('ERROR: ' + message);
	ShowError("We are sorry, something went wrong. We are looking into it.");

	if (_user != null)
		LE.log('ERROR | [' + _user.ID + '] | Page [' + _currentPage + '] | ' + message);
	else
		LE.log('ERROR | Page [' + _currentPage + '] | ' + message);
	
	console.log('ERROR: ' + message);
}

function LogInfo(message){
	console.log(message);
	var log = 'INFO | ';

	if (config.LogTime === true) {
		var m = moment().format('h:mm:ss:SSS a'); 
		log += m + ' ';
	}

	if (_user !== null && _user.ID !== null && typeof _user.ID != "undefined")
		log += '[' + _user.ID + '] ';
	
	log += '| Page [' + _currentPage + '] | ' + message;

	LE.log(log);
}

function MovePageLeft(to, from, callback) {
	if (_currentPage == to)
		return;

	var time = 500;
	NoScroll();
	$('body').scrollTop(0);
	$(to).addClass('activePage');

	if (_isAndroid){
		$(to).hide();
		$(from).hide();
		$(to).fadeIn(time);
	}
	else{
		$(to).show();
		$(to).transition({x: '100%'}, 0);
		$(to).transition({y: '0'}, 0);
		$(from).transition({x: '-100%'}, time, 'linear');
		$(to).transition({x: '0'}, time, 'linear');
	}
   
	setTimeout(function(){
		$(from).removeClass('activePage');
		AllowScroll();
		$(from).hide();
		_previousPage = _currentPage;
		_currentPage = to;

		// Resize();
		if (typeof callback != "undefined" && callback !== null)
		  callback();

	}, time);
}

function MovePageRight(to, from, callback) {
	if (_currentPage == to)
		return;

	var time = 300;
	NoScroll();
	$('body').scrollTop(0);
	$('.page').removeClass('activePage');
	$(to).addClass('activePage');

	if (_isAndroid){
		$(to).hide();
		$(from).hide();
		$(to).fadeIn(time);
	}
	else{
		$(to).show();
		$(to).transition({x: '-100%'}, 0);
		$(to).transition({y: '0'}, 0);
		$(from).transition({x: '100%'}, time, 'linear');
		$(to).transition({x: '0'}, time, 'linear');
	}
	
	setTimeout(function(){
		$(from).removeClass('activePage');
		$(from).hide();
		AllowScroll();
		_previousPage = _currentPage;
		_currentPage = to;

		// Resize();
		if (typeof callback != "undefined" && callback !== null)
		  callback();

	}, time);
}

function MovePageUp(to, from, isInsert, callback) {
	var time = 300;
	$('body').scrollTop(0);
	$('#tOverlay').fadeIn();
	$(to).show();
	NoScroll();

	$(to).addClass('activePage');
	$(to).addClass('popup');

	$(to).transition({x: '0%'}, 0);
	$(to).transition({y: '100%'}, 0);
	$(to).transition({y: '0px'}, time, 'linear');

	setTimeout(function(){
		if (typeof from != "undefined" && from !== null)
			$(from).removeClass('activePage');

		if (isInsert !== true)
			_currentPage = to;

		$(to).scrollTop(0);

		if (typeof callback != "undefined" && callback !== null)
			callback();

	}, time);
}

function MovePageDown(to, from, isInsert, callback) {
	var time = 300;
	$('#tOverlay').fadeOut('fast');
	$('body').scrollTop(0);

	$(to).transition({x: '0%'}, 0);
	$(to).transition({x: '0px'}, time, 'linear');

	$(to).addClass('activePage');

	if (typeof from != "undefined" && from !== null) {
		$(from).transition({y: '100%'}, time, 'linear');
	}

	setTimeout(function(){
		$(to).fadeIn(100);
		$(to).show();
		$('.page').removeClass('popup');
		AllowScroll();

		if (typeof from != "undefined" && from !== null) {
			$(from).removeClass('activePage');
			$(from).hide();
		}

		if (isInsert !== true)
			_currentPage = to;

		if (typeof callback != "undefined" && callback !== null)
			callback();

	}, time);
}

function CacheImage(id, src){
	if (!_isNative){
		return;
	}

	var target = $('#img-' + id);

	if (!target.length ) {
		setTimeout(function(){ CacheImage(id, src)}, 100);
		return;
	}

	ImgCache.isCached(src, function(path, success) {
		if (success) {
			ImgCache.useCachedFileWithSource(target, src,
				function () {
					LogInfo('SUCCESS! Image pulling from cache: ' + path);	
				}, 
				function(){
					LogInfo('CACHE ISSUE...readding: ' + src);
					$('#img-' + id).attr('src', src);
					ImgCache.cacheFile(src, function () {
						
					});
				});
		} 
		else {
			// not there, need to cache the image
			LogInfo('ADDING TO CACHE: ' + src);
			$('#img-' + id).attr('src', src);
			ImgCache.cacheFile(src, function () {
			
	    	});
		}
	});
}

function NoScroll(){
	$('body, html').css('overflow', 'hidden');
	$('body, html').css('position', 'fixed');
}

function VideoClick(button, vimeo, path, where){
	$(button).on('click', function(){
		// the video libary doesn't know the path till it is clicked.
		if (vimeo === null) {
			path = $(this).attr('id');
			vimeo =  path.substr(path.lastIndexOf('/') + 1);
		}

		$.ajax({
			url: config.Path + '/marvin/trackvideo',
			data: { UserID: _user.ID, Url: path, WhereClicked: where },
			type: 'POST'
		});

		NoScroll();
		var vp = $('#videoPlayer');
		var iframe = $('#videoPlayer iframe');
		var url = 'http://player.vimeo.com/video/' + vimeo + '?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff&amp;autoplay=1';
		iframe.attr('src', url);
		iframe.css('height', $(window).height() + 'px');
		iframe.css('width', $(window).width() + 'px');

		// vp.css('top', $('body').scrollTop());
		vp.fadeIn();

		$('#closeVideo').one('click', function(){
			CloseVideo();
		});
	});
}

function Reset(){
	_isEmbeddedPA = false;
	_isEmbeddedJournal = false;
	_isEmbeddedMotivation = false;
	_isEmbeddedChangeTool = false;
	_isEmbeddedIC = false;
	_isEmbeddedMatching = false;
	_isEmbeddedPrevisit = false;
	_isEmbeddedResources = false;
	_isWatsonArticle = false;
}

function ShowError(txt, hide, delay) {
	HideLoader();
	var eb = $('#errorBox');
	eb.html(txt);
	eb.show();

	var st = $(window).scrollTop() - 10;

	if (st <= 0){
		eb.css('top', '');
		eb.css('bottom', 0);
	}
	else {
		eb.css('top', '0');
		eb.css('bottom', '');
	}

	eb.fadeIn();
	// $('#errorBox').transit({y: st}, 500, 'ease');

	if (hide !== false){
		var val = 4000;
		if (typeof delay != 'undefined' && delay !== null)
			val = delay;

		setTimeout(function(){
			// $('#errorBox').transit({y:'80px'}, 300, 'ease');
			eb.fadeOut('fast', function() { eb.hide(); });
		}, val);
	}
}

function ShowLoader(){
	$('#mainLoader').fadeIn(200);
}

function ShowTipSheet(pageID, type){
	_tipSheetType = type;
	
	$('.marvinPage .content').html('');

	$.ajax({
		url: config.Path + '/marvin/tracktipsheet',
		data: { UserID: _user.ID, PageID: pageID, WhereClicked: type },
		type: 'POST'
	}).done(function(data){
		if (data === null){
			HandleError("marvin/tracktipsheet returned null");
		}
	});

	_tipSheet = pageID;
	Continue(pageID, true); // in content-engine
}

function HideLoader() {
	$('#mainLoader').fadeOut('slow');
}

function ShowSuccess(txt) {
	$('#successBox').html(txt);
	$('#successBox').show();
	$('#successBox').transit({y:'-80px'}, 500, 'ease');

	setTimeout(function(){
		$('#successBox').transit({y:'80px'}, 300, 'ease');
		setTimeout(function(){ $('#successBox').hide(); }, 500);
	}, 2000);
}

function ValidateDate(txtDate) {
  var currVal = txtDate;
  if(currVal === '')
	return false;

  //Declare Regex
  var rxDatePattern = /^(\d{1,2})(\/|-)(\d{1,2})(\/|-)(\d{4})$/;
  var dtArray = currVal.match(rxDatePattern); // is format OK?

  if (dtArray === null)
	 return false;

  //Checks for mm/dd/yyyy format.
  dtMonth = dtArray[1];
  dtDay= dtArray[3];
  dtYear = dtArray[5];

  if (dtMonth < 1 || dtMonth > 12)
	  return false;
  else if (dtDay < 1 || dtDay> 31)
	  return false;
  else if ((dtMonth==4 || dtMonth==6 || dtMonth==9 || dtMonth==11) && dtDay ==31)
	  return false;
  else if (dtMonth == 2)
  {
	 var isleap = (dtYear % 4 === 0 && (dtYear % 100 !== 0 || dtYear % 400 === 0));
	 if (dtDay> 29 || (dtDay ==29 && !isleap))
		  return false;
  }
  return true;
}

function ValidatePhoneNumber(phone){
	var re = /^[(]{0,1}[0-9]{3}[)]{0,1}[-\s\.]{0,1}[0-9]{3}[-\s\.]{0,1}[0-9]{4}$/;
	return re.test(phone);
}

var activityIndicatorOn = function()
{
	console.log('ACTIVITY ON');
	$( '<div id="imagelightbox-loading"><div></div></div>' ).appendTo( 'body' );
};

activityIndicatorOff = function()
{
	$( '#imagelightbox-loading' ).remove();
};
// External links
function OpenExternalLink(url){
  window.open(url, '_system', 'location=yes');
}

// OVERLAY
overlayOn = function()
{
	$( '<div id="imagelightbox-overlay"></div>' ).appendTo( 'body' );
};
overlayOff = function()
{
	$( '#imagelightbox-overlay' ).remove();
};


function isValidEmailAddress(emailAddress) {
	var pattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
	return pattern.test(emailAddress);
}

function InitializeDropDowns() {
    $(".dropDownList").find('.motivationBtn').off();
    $(".dropDownList").find('.motivationBtn').on('click', function () {
   
    	var btn = $(this);
        var ddl = $(btn.closest('.dropDownList'));
        var control = $(btn.closest('.control'));

        // clear out the selected buttons
        var list = ddl.find('.motivationBtn').addClass('opacity50');
        
        // make this one the selected one
       	btn.removeClass('opacity50');
      // 	control.find('.hdnSelectedID').val(btn.attr('id'));
       	var id = $(ddl).attr('id');
       	$('#' + id + ' .hdnSelectedID').val(btn.attr('id'));
    });
    
}

function PopulateDropDowns(selected, value) {
   	if (!value)
   		value = null;
   	else
   		value = value.trim();

    var hdnSelect = $(selected);
    hdnSelect.val(value);

    var ddl = $(hdnSelect.closest('.dropDownList'));
   
    var list = ddl.find('.motivationBtn');
    
    for (var i = 0; i < list.length; i++) {
    	var item = $(list[i]);
    	var id = item.attr('id').trim();
		var htmlScore = item.find('span').html().trim();

    	if (id == value) {
            item.removeClass('opacity50');
            break; 
        } /*else if(value===htmlScore){
			  item.removeClass('opacity50');
			  
			   hdnSelect.val(id);
		}*/
    }
}

function PopulateLinkedDropDowns(selected, value) {
    if (!value)
        value = null;
    else
        value = value.trim();

    var hdnSelect = $(selected);
    //hdnSelect.val(value);

    var ddl = $(hdnSelect.closest('.dropDownList'));

    var list = ddl.find('.motivationBtn');

    for (var i = 0; i < list.length; i++) {
        var item = $(list[i]);
        var id = item.find('span').html().trim();
        var idd = item.attr('id').trim();
        if (id == value) {
            item.removeClass('opacity50');
			hdnSelect.val(idd);
            //break;
        }
    }
}

function ProcessDropDowns(e) {
 
    var valuearray = {};
    var selectedID = $(e).find('.hdnSelectedID').val();
    
    valuearray.AnswerID = selectedID;
    
    var list = $(e).find('.motivationBtn');
    for (var i = 0; i < list.length; i++) {
    	var item = $(list[i]);

    	var id = item.attr('id').trim();
        var val = selectedID.trim();

        if (id === val) {
            valuearray.Text = item.find('.motivationTitle').html();
            valuearray.Index = i;
            valuearray.Score = item.data('score');
            valuearray.Action = item.data('action');
            valuearray.Code = $(e).data('code');
            break;
        }
    }

    return valuearray;
}

function HideConfirm() {
    $('#confirm').css('top', '-400px');

    setTimeout(function () {
        $('#overlay').fadeOut(300);
    }, 300);
}

function ShowConfirm(txt, confirmFunction, cancelFunction) {
    $('#overlay').fadeIn(300, function () {
        $('#confirmText').html(txt);
        $('#confirm').css('top', '15%');
    });

    $('#btnConfirmYes').one('click', function () {
        confirmFunction();
        HideConfirm();
    });

    $('#btnConfirmCancel').one('click', function () {
        if (typeof cancelFunction != "undefined" && cancelFunction != null)
            cancelFunction();

        HideConfirm();
    });

}








//function ProcessEOM(element) {
// var valuearray = {};
//    var el = $(element).find('.');
//    el.each(function () {
//        var e = $(this);


//    });


   
//    return valuearray;
//}



