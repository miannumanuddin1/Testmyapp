var _solutionsContainer = [];
var _solutionID = "";
var _isEditingSolution = false;
var _selectedSolutionID = "";
var _isEditingSupportName = false;
// var _supportNameID = "";
var _supportNamesContainer = [];
var _supportNameBeingEdited = "";
var _isEditingPSPopup = false;
var _problemID = "";
var _allProblemsStorage = {};
var _previousProblemPage = "";
var _isSearchingProblems = false;
var _isEditingPSTool = false;
var _currentPSTool = {};

function InitializeProblemSolving(){

	var previousPSPage = "";

	$('#problemSolvingToolBtn').on('click', function(){
		// Add GET List function here ====================
		_callProblemTool = "";
		ShowyClose('#pageProblemSolvingList');
		ClearProblemSolvingTool();
		GetProblems();
	});

	$('.PSHomeMenuBtn').on('click', function(){
		if(_currentPage != '#pageProblemSolvingList'){
			GetProblems();
			MovePageRight('#pageProblemSolvingList', _currentPage);
		}
	});

	$('.PSSearchMenuBtn').on('click', function(){
		if(_currentPage != '#pageProblemSolvingSearch'){
			ResetPSSearchForm();
			MovePageLeft('#pageProblemSolvingSearch', _currentPage);
		}
	});

	$('.PSNewMenuBtn').on('click', function(){
		previousPSPage = _currentPage;
		_isEditingPSTool = false;
		ClearProblemSolvingTool();
		MovePageLeft('#pageProblemSolvingProblem', _currentPage);
	});

	$('#problemToolNextBtn').on('click', function(){
		GatherProblemPageValues();
	});

	$('#problemToolBackBtn').on('click', function(){
		if(previousPSPage=='#pageProblemSolvingList'){
			MovePageRight('#pageProblemSolvingList', _currentPage);
			ClearProblemSolvingTool();
		} else {
			MovePageRight('#pageProblemSolvingSearch', _currentPage);
		}
	});

	$('#addNewSolutionBtn').hide();

	$('#addNewSolutionBtn').on('click', function(){
		_isEditingSolution = false;
		ShowSolutionForm();
	});

	$('#savePSSolutionBtn').on('click', function(){
		GatherProblemSolutionData();
	});

	$('#cancelPSSolutionBtn').on('click', function(){
		HideSolutionForm();
	});

	$('#psSolutionBackBtn').on('click', function(){
		MovePageRight('#pageProblemSolvingProblem', _currentPage);
	});

	$('#psSolutionNextBtn').on('click', function(){
		if(_solutionsContainer.length<1){
			ShowError("Please enter at least one solution");
			$('#possibleSolutionText').focus();
			return;
		}
		_isEditingPSPopup = false;
		LoadPopupButtons();
		BuildBestSolutionPage();
		MovePageLeft('#pageProblemSolvingVerify', _currentPage);
	});

	$('#psVerifyBackBtn').on('click', function(){
		MovePageRight('#pageProblemSolvingSolution', _currentPage);
	});

	$('#psVerifyNextBtn').on('click', function(){
		MovePageLeft('#pageProblemSolvingSteps', _currentPage);
	});

	$('#psStepsBackBtn').on('click', function(){
		BuildBestSolutionPage();
		MovePageRight('#pageProblemSolvingVerify', _currentPage);
	});

	$('#addAnotherSupportNameBtn').hide();

	$('#addAnotherSupportNameBtn').on('click', function(){
		_isEditingSupportName = false;
		ShowSupportNamesForm();
	})

	$('#supportNamesSaveBtn').on('click', function(){
		GatherSupportName();
		HideSupportNamesForm();
	});

	$('#supportNamesCancelBtn').on('click', function(){
		HideSupportNamesForm();
	});

	$('#psStepsNextBtn').on('click', function(){
		_previousProblemPage = _currentPage;
		_isEditingPSPopup = true;
		LoadPopupButtons();
		BuildProblemSolvingSummaryPage();
		MovePageLeft('#pageProblemSolvingSummary', _currentPage);
	});

	$('#psSummaryBackBtn').on('click', function(){

		_isEditingPSPopup = false;
		LoadPopupButtons();
		if(_previousProblemPage=='#pageProblemSolvingList'){
			ClearProblemSolvingTool();
			GetProblems();
		}
		if(_previousProblemPage=='#pageProblemSolvingSearch'){
			ClearProblemSolvingTool();
		}
		MovePageRight(_previousProblemPage, _currentPage);
	});

	$('#summaryPagePurpleSection').hide();

	$('.problemSummaryEditBtn, .desiredOutcomeSummaryEditBtn').on('click', function(){
		_isEditingPSPopup = false;
		LoadPopupButtons();
		MovePageRight('#pageProblemSolvingProblem', _currentPage);
	});

	$('.solutionSummaryEditBtn').on('click', function(){
		_isEditingPSPopup = false;
		LoadPopupButtons();
		MovePageRight('#pageProblemSolvingSolution', _currentPage);
	});

	$('.solutionStepsEditBtn').on('click', function(){
		_isEditingPSPopup = false;
		LoadPopupButtons();
		MovePageRight('#pageProblemSolvingSteps', _currentPage);
	});

	$('#psSummaryDoneBtn').on('click', function(){
		SaveProblemSolvingTool()
	});

	$('#submitPSSearchBtn').on('click', function(){
		SearchProblems();
	});

	$('#decideReflectText').hide();
	$('#saveProblemReflectionBtn').hide();
	
	if(_callProblemTool == "" && _callProblemTool != "undefined" && _callProblemTool != null){
		$('#psCloseBtn').hide();
	}
	
	$('#psCloseBtn').on('click', function(){
		//Continue(_nextMarvin.PageTypeID, true);
		ShowNextPage();
		console.log(_nextMarvin.PageTypeID);
		_callProblemTool = "";
	});

	LoadPopupButtons();
}

function BuildBestSolutionPage(){
	OrderSolutions();
	$('#solutionButtonsHere').html('');
	var i = 0
	var length = _solutionsContainer.length;
	var max = 45;
	var short = "";
	for(i=0; i<length; i++){
		short = _solutionsContainer[i]["Name"];

		if (short.length > max){
			short = jQuery.trim(solutionText).substring(0, max).split(" ").slice(0, -1).join(" ") + "...";
		}

		var html = '<button class="verifySolutionBtn redButton" id="' + _solutionsContainer[i]["ID"] + '">';
		html += short;
		html += '</button>';

		$('#solutionButtonsHere').append(html);
	}

	$('.verifySolutionBtn').on('click', function(){
		_isEditingPSPopup = false;
		LoadPopupButtons();
		_selectedSolutionID = $(this).attr('id');
		BuildStepsPage();
		MovePageLeft('#pageProblemSolvingSteps', _currentPage);
	});
}

function BuildProblemListHtml(data){
	var data = _allProblemsStorage;
	var max = 30;
	var html = '';
	var exists;
	var month = '';
	var problem;
	var date = '';
	var months = [];
	var problemText = "";

	for(var i = 0; i < data.length; i++){
		problem = data[i];
		date = moment(problem.CreateTime).format("MMM DD, YYYY");
		month = moment(problem.CreateTime).format("MMMM");
		problemText = problem.Name;

		if(problem.Name === "" || problem.Name === null){
			problemText = "None";
		}

		if (problemText.length > max){
			problemText = jQuery.trim(eventText).substring(0, max).split(" ").slice(0, -1).join(" ") + "...";
		}

		if(months.indexOf(month) == -1){
			months.push(month);
			html += '<h4 class="journalMonth">' + month + '</h4>';
		}

		html += '<div class="problemRow" id="' + problem.ID + '">';
		html += '<div class="problemText font700">' + problemText + '</div>';
		html += '<div class="row"><div class="problemDate col-xs-4">' + date + '</div>';
		html += '<div class="problemTag col-xs-4">' + problem.Tag + '</div>';
		html += '<div class="problemView col-xs-4">View</div></div></div>';

	} //end for loop

	return html;
}

function BuildProblemSolutionHtml(){
	$('#solutionsGoHere').html('');
	// alert(JSON.stringify(_solutionsContainer));
	var i = 0
	var length = _solutionsContainer.length;
	var max = 45;
	var short = "";
	for(i=0; i<length; i++){
		short = _solutionsContainer[i]["Name"];

		if (short.length > max){
			short = jQuery.trim(solutionText).substring(0, max).split(" ").slice(0, -1).join(" ") + "...";
		}

		var html = '<div class="newSolution clearBoth" id="' + _solutionsContainer[i]["ID"] + '">';
		html += '<div class="solutionText">' + short + '</div>';
		html += '<input type="hidden" class="prosCons" value="' + _solutionsContainer[i]["ProCon"] + '" />';
		html += '<div class="newSolutionEdit right blue">Edit</div>';

		html += '</div>';

		$('#solutionsGoHere').append(html);
	}

}

function BuildProblemSolvingSummaryPage(){
	var problem = $('#problemText').val();
	var outcome = $('#outcomeText').val();
	var solutionObject = GetSolutionObjectFromStorage(_selectedSolutionID);
	var steps = $('#stepsText').val();
	// var tag = $('#problemSolvingTagSelect').val();
	$('#problemSummaryHere').html(problem);
	$('#desiredOutcomeSummaryHere').html(outcome);
	$('#solutionSummaryHere').html(solutionObject["Name"]);
	$('#problemSummaryStepsHere').html(steps);

	var whenUseSolutionText = $('#useSolutionTextPS').val();
	var thingsInWayText = $('#thingInWayTextPS').val();
	var howOvercomeText = $('#howOvercomeTextPS').val();
	$('#summaryUseSolutionHere').html(whenUseSolutionText);
	$('#summaryThingsInWayHere').html(thingsInWayText);
	$('#summaryOvercomeChallengesHere').html(howOvercomeText);
	$('#summarySupportNamesHere').html('');

	if(_supportNamesContainer === null && whenUseSolutionText === "" && thingsInWayText === "" && howOvercomeText === ""){
		$('#summaryPagePurpleSection').hide();
		$('#decideReflectText').hide();
		$('#comeBackToReflect').show();
		return;
	}

	if(_isEditingPSTool){
		$('#decideReflectText').show();
		$('#comeBackToReflect').hide();
		// $('#saveProblemReflectionBtn').show();
	}

	$('#summaryPagePurpleSection').show();

	if(_supportNamesContainer !== null && _supportNamesContainer !== undefined){
		var n = 0;
		for(n=0; n<_supportNamesContainer.length; n++){
			var html = '<div>' + _supportNamesContainer[n] + '</div>';
			$('#summarySupportNamesHere').append(html);
		}
	}
}

function BuildPSToolForEditing(problem){ // Builds the Summary page and entire tool for Editing a specific problem


	_currentPSTool = problem;
	_isEditingPSTool = true;
	_isEditingPSPopup = true;

	$('#decideReflectText').show();
	$('#comeBackToReflect').hide();
	// $('#saveProblemReflectionBtn').show();

	// Builds the first page/problem page
	$('#problemText').val(problem["Name"]);
	$('#outcomeText').val(problem["Outcome"]);
	$('#problemSolvingTagSelect').val(problem["Tag"]);

	_solutionsContainer = problem["Solutions"];
	ConvertSolutionStringsToArrays();

	var selectedSolution = GetSelectedSolution(problem);

	_selectedSolutionID = selectedSolution["ID"];

	// Builds the steps page
	$('#stepsText').val(selectedSolution["Steps"]);
	$('#problemStepsHere').html(problem["Name"]);
	$('#desiredOutcomeStepsHere').html(problem["Outcome"]);
	$('#solutionStepsHere').html(selectedSolution["Name"]);

	//Builds the solutions page
	BuildProblemSolutionHtml();
	$('.newSolutionEdit').off();
	$('.newSolutionEdit').on('click', function(){
		ClearProblemSolutionForm();
		_isEditingSolution = true;
		_solutionID = $(this).closest('.newSolution').attr('id');
		var editSolutionObject = GetSolutionObjectFromStorage(_solutionID);
		FillInSolutionForm(editSolutionObject);
	});


	// Builds the Summary page
	$('#solutionSummaryHere').html(selectedSolution["Name"]);
	$('#problemSummaryHere').html(problem["Name"]);
	$('#desiredOutcomeSummaryHere').html(problem["Outcome"]);
	$('#problemSummaryStepsHere').html(selectedSolution["Steps"]);
	$('#decideReflectText').val(problem["Reflection"]);

	// Builds the optional purple section of the Summary page (data from the popup)
	var support = selectedSolution["Support"];
	var whenUse = selectedSolution["WhenShouldIUse"];
	var inWay = selectedSolution["WhatCouldGetInWay"];
	var howOvercome = selectedSolution["HowCanIOvercome"];

	// If they didn't fill out the popup, skip the rest of the function
	if(support === null && whenUse === null && inWay === null && howOvercome === null){
		return;
	}

	$('#summaryPagePurpleSection').show();

	$('#summaryUseSolutionHere').html(whenUse);
	$('#summaryThingsInWayHere').html(inWay);
	$('#summaryOvercomeChallengesHere').html(howOvercome);

	$('#useSolutionTextPS').val(selectedSolution["WhenShouldIUse"]);
	$('#thingInWayTextPS').val(selectedSolution["WhatCouldGetInWay"]);
	$('#howOvercomeTextPS').val(selectedSolution["HowCanIOvercome"]);

	_supportNamesContainer = selectedSolution["Support"];

	if(_supportNamesContainer == undefined){
		return;
	}
	_supportNamesContainer = _supportNamesContainer.split(', ');

	BuildSupportNamesHtml();

	$('.supportNameEdit').off();
	$('.supportNameEdit').on('click', function(){
		_isEditingSupportName = true;
		_supportNameBeingEdited = $(this).prev().html();
		$('#problemSupportPeopleNames').val(_supportNameBeingEdited);
		ShowSupportNamesForm();
	});

	var n = 0;
	for(n=0; n<_supportNamesContainer.length; n++){
		var html = '<div>' + _supportNamesContainer[n] + '</div>';
		$('#summarySupportNamesHere').append(html);
	}

}

function BuildSupportNamesHtml(){
	$('#supportNamesGoHere').html('');
	var i = 0
	var length = 0;
	if (_supportNamesContainer)
		length = _supportNamesContainer.length;

	var max = 45;
	var short = "";
	for(i=0; i<length; i++){
		short = _supportNamesContainer[i];

		if (short.length > max){
			short = jQuery.trim(short).substring(0, max).split(" ").slice(0, -1).join(" ") + "...";
		}

		var html = '<div class="supportNameWrapper clearBoth">';
		html += '<div class="supportName left">' + short + '</div>';
		html += '<div class="supportNameEdit right blue">Edit</div>';
		html += '</div>';
		$('#supportNamesGoHere').append(html);
	}
}

function BuildStepsPage(){

	var problem = $('#problemText').val();
	var outcome = $('#outcomeText').val();
	var solutionObject = GetSolutionObjectFromStorage(_selectedSolutionID);
	var steps = solutionObject["Steps"];
	var supportNames = solutionObject["Support"];
	if(supportNames){
		supportNames = supportNames.split(", ");
	}

	_supportNamesContainer = supportNames;

	$('#stepsText').val(steps);
	$('#problemStepsHere').html(problem);
	$('#desiredOutcomeStepsHere').html(outcome);
	$('#solutionStepsHere').html(solutionObject["Name"]); // the solution

	ClearPSPopUp();
	if(supportNames !== null){
		BuildSupportNamesHtml();
	}

	$('#useSolutionTextPS').val(solutionObject["WhenShouldIUse"]);
	$('#thingInWayTextPS').val(solutionObject["WhatCouldGetInWay"]);
	$('#howOvercomeTextPS').val(solutionObject["HowCanIOvercome"]);

}

function ChangeSelectedSolutionToTrue(){
	var length = _solutionsContainer.length;
	var i = 0;
	for(i=0; i<length; i++){
		if(_selectedSolutionID == _solutionsContainer[i]["ID"]){
			_solutionsContainer[i]["IsSelected"] = true;
			if(_supportNamesContainer != undefined){
				_supportNamesContainer = _supportNamesContainer.join(', ');
			}

			_solutionsContainer[i]["Support"] = _supportNamesContainer;

			var whenUseSolutionText = $('#useSolutionTextPS').val();
			var thingsInWayText = $('#thingInWayTextPS').val();
			var howOvercomeText = $('#howOvercomeTextPS').val();
			var steps = $('#stepsText').val();

			_solutionsContainer[i]["Steps"] = steps;
			_solutionsContainer[i]["WhenShouldIUse"] = whenUseSolutionText;
			_solutionsContainer[i]["WhatCouldGetInWay"] = thingsInWayText;
			_solutionsContainer[i]["HowCanIOvercome"] = howOvercomeText;
		} else {
			_solutionsContainer[i]["IsSelected"] = false;
		}
	}
}

function ClearProblemSolutionForm(){
	$('#possibleSolutionText').val('');

	$('#problemSolvingForm').find('input').each(function(){
		if($(this).is(':checked')){
			$(this).attr('checked', false);
		}
	});
	var otherText = $('#psOtherText').val('');
}

function ClearProblemSolvingTool(){

	_solutionsContainer = [];
	_solutionID = "";
	_isEditingSolution = false;
	_selectedSolutionID = "";
	_isEditingSupportName = false;
	// _supportNameID = "";
	_supportNamesContainer = [];
	_supportNameBeingEdited = "";
	_isEditingPSPopup = false;
	_isEditingPSTool = false;

	$('#problemText').val('');
	$('#outcomeText').val('');
	$('#problemSolvingTagSelect').val(0);
	$('#solutionsGoHere').html('');
	$('#possibleSolutionText').val('');
	$('#problemSolvingForm').find('input').each(function(){
		if($(this).is(':checked')){
			$(this).attr('checked', false);
		}
	});
	$('#psOtherText').val('');
	$('#solutionButtonsHere').html('');
	$('#problemStepsHere').html('');
	$('#desiredOutcomeStepsHere').html('');
	$('#solutionStepsHere').html('');
	$('#stepsText').val('');
	$('#supportNamesGoHere').html('');
	$('#problemSupportPeopleNames').val('');
	$('#useSolutionTextPS').val('');
	$('#thingInWayTextPS').val('');
	$('#howOvercomeTextPS').val('');
	$('#problemSummaryHere').html('');
	$('#desiredOutcomeSummaryHere').html('');
	$('#solutionSummaryHere').html('');
	$('#problemSummaryStepsHere').html('');
	$('#summarySupportNamesHere').html('');
	$('#summaryUseSolutionHere').html('');
	$('#summaryThingsInWayHere').html('');
	$('#summaryOvercomeChallengesHere').html('');
	$('#decideReflectText').val('');
	$('#comeBackToReflect').show();
	$('#decideReflectText').hide();
	$('#summaryPagePurpleSection').hide();
	ShowSupportNamesForm();
	
	if(_callProblemTool == "pageType"){
	   $('#psCloseBtn').show();
	} else {
		$('#psCloseBtn').hide();
	}

}

function ClearPSPopUp(){
	$('#supportNamesGoHere').html('');
	$('#problemSupportPeopleNames').val('');
	$('#useSolutionTextPS').val('');
	$('#thingInWayTextPS').val('');
	$('#howOvercomeTextPS').val('');
}

function ConvertSolutionArraysToString(){ // ProCon Array
	var length = _solutionsContainer.length;
	var i = 0;
	for(i=0; i<length; i++){
		if(_solutionsContainer[i]["ProCon"] !== null && _solutionsContainer[i]["ProCon"] !== undefined){
			_solutionsContainer[i]["ProCon"] = _solutionsContainer[i]["ProCon"].join(', ');
		}
	}
}

function ConvertSolutionStringsToArrays(){
	var length = _solutionsContainer.length;
	var i = 0;
	for(i=0; i<length; i++){
		if(_solutionsContainer[i]["ProCon"] !== null && _solutionsContainer[i]["ProCon"] !== undefined){
			_solutionsContainer[i]["ProCon"] = _solutionsContainer[i]["ProCon"].split(', ');
		}
	}
}

function FillInSolutionForm(object){

	$('#possibleSolutionText').val(object["Name"]);

	var i = 0;
	var prosCons = object["ProCon"];

	if(prosCons==null){
		ShowSolutionForm();
		return;
	}
	// if(_isEditingPSTool === false){
	// 	// prosCons = prosCons.split(", "); i don't think we need this anymore
	// }

	for(i=0; i<prosCons.length; i++){
		var found = false;
		$('#problemSolvingForm').find('input').each(function(){
			if($(this).data('solution-type') == prosCons[i] ){
				$(this).prop('checked', true);
				found = true;
				return false;
			}
		});
		if (!found){
			$('#psOtherText').val(prosCons[i]);
		}
	}
	ShowSolutionForm();
}

function GatherProblemPageValues(){
	var problem = $('#problemText').val();
	var outcome = $('#outcomeText').val();
	var tag = $('#problemSolvingTagSelect').val();

	if(problem === ""){
		$('#problemText').focus();
		ShowError("Please describe the problem");
		return;
	}
	if(outcome === ""){
		$('#outcomeText').focus();
		ShowError("Please enter the desired outcome");
		return;
	}
	if(tag==0){
		ShowError("Please select a tag");
		return;
	}

	MovePageLeft('#pageProblemSolvingSolution', _currentPage);
}

function GatherProblemSolutionData(){
	var solution = $('#possibleSolutionText').val();

	if(solution === ""){
		$('#possibleSolutionText').focus();
		ShowError("Solution text cannot be blank");
		return;
	}

	var prosCons = [];
	if(_isEditingSolution === false){
		var id = CreateGuid();
	} else {
		var id = _solutionID;
	}

	var inputData = "";
	var count = 0;

	$('#problemSolvingForm').find('input').each(function(){
		if($(this).is(':checked')){
			inputData = $(this).data('solution-type');
			prosCons.push(inputData);
			count++;
		}
	});
	var otherText = $('#psOtherText').val();
	if(otherText !== ""){
		prosCons.push(otherText);
		count++;
	}

	var solutionObject = { ID: id, Name: solution, Order: count, ProCon: prosCons, IsSelected: false };

	if(_isEditingSolution === false){
		_solutionsContainer.push(solutionObject);
	} else {
		UpdateSolutionObjectInStorage(solutionObject);
	}

	BuildProblemSolutionHtml();
	SetupProblemsListEvents();

	$('.newSolutionEdit').off();
	$('.newSolutionEdit').on('click', function(){
		ClearProblemSolutionForm();
		_isEditingSolution = true;
		_solutionID = $(this).closest('.newSolution').attr('id');
		var editSolutionObject = GetSolutionObjectFromStorage(_solutionID);
		FillInSolutionForm(editSolutionObject);
	});

	HideSolutionForm();


	// Need to update selected solution to 'selected: true' when saving the entire Problem Solving Tool =================
}

function GatherSupportName(){

	if(_supportNamesContainer==undefined){
		_supportNamesContainer = [];
	}
	var supportName = $('#problemSupportPeopleNames').val();

	if(_isEditingSupportName === false){
		_supportNamesContainer.push(supportName);
	} else {
		var index = _supportNamesContainer.indexOf(_supportNameBeingEdited);
		_supportNamesContainer[index] = supportName;
	}

	BuildSupportNamesHtml();

	$('.supportNameEdit').off();
	$('.supportNameEdit').on('click', function(){
		_isEditingSupportName = true;
		_supportNameBeingEdited = $(this).prev().html();
		$('#problemSupportPeopleNames').val(_supportNameBeingEdited);
		ShowSupportNamesForm();
	});
}

function GetProblemFromStorage(){
	var id = _problemID;
	var i = 0;
	var length = _allProblemsStorage.length;

	for(i=0; i < length; i++){
		if(_allProblemsStorage[i]["ID"] == id){
			var activeProblemObject = _allProblemsStorage[i];
			return activeProblemObject;
		}
	}

	return null;
}

function GetProblems(callback){ // Add to PS Tool icon in app menu after API completed
	$.ajax({
		type: "GET",
		url: config.Path + '/problemsolving/get', // make sure URL is correct
		data: { UserID: _user.ID }
	}).done(function(data){

		if(data === null){
			HandleError("problemsolving/get returned null");
			return;
		}

		_allProblemsStorage = data;

		var html = '';

		if (data.length == 0){
			html = "<p>You currently have no data to show...</p>";
		}
		else {
			html = BuildProblemListHtml(); // see below
		}

		$('#putProblemsHere').html(html);

		SetupProblemsListEvents();

		if (typeof callback != "undefined" && callback !== null){
			callback();
		}

	}); // end .done
}

function GetSelectedSolution(problem){ // to display on Summary pg when editing

	var length = problem["Solutions"].length;
	// if(length==1){
	// 	return problem["Solutions"][0];
	// }
	var i = 0;
	var solution = {};
	for(i=0; i<length; i++){
		if(problem["Solutions"][i]["IsSelected"]==true){
			solution = problem["Solutions"][i];
			return solution;
		}
	}
}

function GetSolutionObjectFromStorage(id){
	var i = 0;
	for(i=0; i<_solutionsContainer.length; i++){
		if(_solutionsContainer[i]["ID"]==id){
			return _solutionsContainer[i];
		}
	}
}

function HideSolutionForm(){
	$('#addNewSolutionBtn').show();
	$('#problemSolvingForm').hide();
	ClearProblemSolutionForm();
}

function HideSupportNamesForm(){
	$('#supportNamesForm').hide();
	$('#addAnotherSupportNameBtn').show();
	$('#problemSupportPeopleNames').val(''); //clear the form
}

function LoadPopupButtons(){
	$('.pspopupEdit').off();
	$('#psAddStepPopUpSave').off();
	$('#psAddStepPopUpCancel').off();

	$('.pspopupEdit').on('click', function(){

		if(_isEditingPSPopup==false){
			MovePageUp('#pageSummaryAddStepPopUp', '#pageProblemSolvingSteps');
			$('#psAddStepPopUpSave').on('click', function(){
				MovePageDown('#pageProblemSolvingSteps', '#pageSummaryAddStepPopUp');
			});

			$('#psAddStepPopUpCancel').on('click', function(){
				MovePageDown('#pageProblemSolvingSteps', '#pageSummaryAddStepPopUp');
			});

		} else {
			MovePageUp('#pageSummaryAddStepPopUp', '#pageProblemSolvingSummary');

			$('#psAddStepPopUpSave').on('click', function(){
				BuildProblemSolvingSummaryPage();
				MovePageDown('#pageProblemSolvingSummary', '#pageSummaryAddStepPopUp');
			});

			$('#psAddStepPopUpCancel').on('click', function(){
				MovePageDown('#pageProblemSolvingSummary', '#pageSummaryAddStepPopUp');
			});
		}
	});
}

function OrderSolutions(){
	_solutionsContainer = _solutionsContainer.sort(function(a,b) { return (b.Order) - (a.Order) });
}

function ResetPSSearchForm(){
	$('#PSSearchResults').html('');
	$('#psTagSort').val(0);
	$('#PSSearchDate').val('');
}

function SaveProblemSolvingTool(){

	ChangeSelectedSolutionToTrue();

	var problem = $('#problemText').val();
	var outcome = $('#outcomeText').val();
	var tag = $('#problemSolvingTagSelect').val();
	var reflection = $('#decideReflectText').val();
	var id = "";
	if(_isEditingPSTool==true){
		id = _currentPSTool.ID;
	}

	ConvertSolutionArraysToString();

	var data = { ID: id, UserID: _user.ID, Name: problem, Outcome: outcome, Reflection: reflection, Tag: tag,
		Solutions: _solutionsContainer };

	// alert(JSON.stringify(data));

	$.ajax({
		type: "POST",
		url: config.Path + '/problemsolving/savetool',
		data: data
	}).done(function(data){

		if(data === null){
			HandleError('problemsolving/savetool returned null');
			return;
		}

		ClearProblemSolvingTool();

		GetProblems();

		MovePageLeft('#pageProblemSolvingList', _currentPage)
	});

}

function SearchProblems(){
	_isSearchingProblems = true;  // not being used as of 3/19

	var date = $('#PSSearchDate').val();
	var topic = $('#psTagSort :selected').text();
	if(topic=="- Tag -"){
		topic = "";
	}
	var searchData = { UserID: _user.ID, Tag: topic, Date: date };

	if(date === "" && topic === ""){
		ShowError('Please enter search criteria.');
		return;
	}

	ShowLoader();

	$.ajax({
		type: "GET",
		url: config.Path + '/problemsolving/search',
		data: searchData
	}).done(function(data){

		if(data=== null){
			HandleError('problemsolving/search returned null');
			return;
		}

		var html = '';

		_allProblemsStorage = data;

		if (data.length == 0){
			html = "<p>No results match your search criteria...</p>";
		}
		else {
			html = BuildProblemListHtml(data);
		}

		$('#PSSearchResults').html(html);

		SetupProblemsListEvents();

		HideLoader();
	}); //end .done

}

function SetupProblemsListEvents(){
	$('.problemRow').off();
	$('.problemRow').on('click', function(){
		_problemID = $(this).attr('id');
		var problem = GetProblemFromStorage();
		if(problem==null){
			ShowError("There was a problem loading the data. Please try again.");
		}
		BuildPSToolForEditing(problem);

		_previousProblemPage = _currentPage;

		MovePageLeft('#pageProblemSolvingSummary', _currentPage);
	});
}

function ShowSolutionForm(){
	$('#addNewSolutionBtn').hide();
	$('#problemSolvingForm').show();
}

function ShowSupportNamesForm(){
	$('#supportNamesForm').show();
	$('#addAnotherSupportNameBtn').hide();
}

function UpdateSolutionObjectInStorage(object){
	var id = object["ID"];
	var i = 0;
	for(i=0; i<_solutionsContainer.length; i++){
		if(_solutionsContainer[i]["ID"]==id){
			_solutionsContainer[i] = object;
		}
	}
}

// function ValidatePSPopup(){
// 	var name = $('#supportNamesGoHere').html();
// 	var when = $('#useSolutionTextPS').val();
// 	var what = $('#thingInWayTextPS').val();
// 	var how = $('#howOvercomeTextPS').val();
// 	if(name === "" || when === "" || what === "" || how === ""){
// 		ShowError("Please complete the form or click Cancel");
// 	}
// }

